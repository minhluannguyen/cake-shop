<Window x:Class="CakeShop.DialogCakeImport"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CakeShop"
        mc:Ignorable="d"
        Title="DialogCakeImport" Height="450" Width="800"
        WindowStartupLocation="CenterScreen"
        Closing="Window_Closing"
>
    <Window.Resources>
        <local:IsEmptyStringConverter x:Key="stringConverter"/>
        <local:IntToMoneyStringConverter x:Key="moneyConverter"/>
        <local:CakeNameConverter x:Key="IDtoNameCakeConverter"/>

        <SolidColorBrush x:Key="listCakeBackgroundColor" Color="White"/>
        <SolidColorBrush x:Key="borderBtnEnable" Color="White"/>
        <SolidColorBrush x:Key="borderBtnHover" Color="Black"/>
        <SolidColorBrush x:Key="backgroundBtnEnable" Color="Transparent"/>
        <SolidColorBrush x:Key="backgroundBtnHover" Color="Gray"/>
        <SolidColorBrush x:Key="bgKeyColor" Color="#FFEED3"/>
        <SolidColorBrush x:Key="whiteShowColor" Color="#F7ECCD"/>
        <SolidColorBrush x:Key="hintTextColor" Color="#B8693E"/>
        <SolidColorBrush x:Key="showColor" Color="#704026"/>
        <SolidColorBrush x:Key="transparentColor" Color="Transparent"/>
        <SolidColorBrush x:Key="hoverbutton" Color="#008EFF"/>
        <SolidColorBrush x:Key="clickbutton" Color="#006BBF"/>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style
            x:Key="suggestWordButton" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="5" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Background" TargetName="border" Value="{StaticResource backgroundBtnHover}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource borderBtnHover}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource bgKeyColor}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource clickbutton}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource bgKeyColor}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource backgroundBtnEnable}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource borderBtnEnable}"/>
                                <Setter Property="FontSize" Value="20"/>
                                <Setter Property="Padding" Value="10"/>
                                <Setter Property="Foreground" Value="{StaticResource hintTextColor}"/>
                                <Setter Property="FontWeight" Value="DemiBold"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>
        <Style
            x:Key="sgraykbtnstyle" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="10" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Background" TargetName="border" Value="{StaticResource hoverbutton}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource hoverbutton}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource clickbutton}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource clickbutton}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>
    </Window.Resources>
    <Window.Background>
        <SolidColorBrush Color="#E2E3DD" Opacity="1"/>
    </Window.Background>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="0.75*"/>
            <RowDefinition Height="5.5*"/>
            <RowDefinition Height="1.0*"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Center">
            <TextBlock Text="{Binding TitleAction, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" 
                       Margin="0 0 10 0" Padding="5" MaxHeight="40" MinWidth="60" TextAlignment="Center"
                       Foreground="{StaticResource showColor}" FontWeight="Bold" FontSize="20"/>
        </Grid>
        <Grid Grid.Row="1" Margin="40 0">
            <Grid.RowDefinitions>
                <RowDefinition Height="1.5*"/>
                <RowDefinition Height="8.5*"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="5.0*"/>
                    <ColumnDefinition Width="3*"/>
                    <ColumnDefinition Width="2.0*"/>
                </Grid.ColumnDefinitions>


            </Grid>
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="3.0*"/>
                    <ColumnDefinition Width="0.1*"/>
                    <ColumnDefinition Width="6.9*"/>
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0">
                    <Border Grid.Row="1" Panel.ZIndex="-1" Opacity="0.9" Margin="0 0 0 0">
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="5"
                                          Opacity=".5"
                                          ShadowDepth="3" />
                        </Border.Effect>
                        <Border 
                            BorderBrush="White"
                            Background="Transparent"
                            BorderThickness="3.5"
                            CornerRadius="15">
                        </Border>
                    </Border>
                    <Grid Grid.Row="1" Margin="20 20 20 20"
                        Panel.ZIndex="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="2*"/>
                            <RowDefinition Height="8*"/>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0">
                            <TextBlock Text="Thời gian" FontSize="20" Foreground="{StaticResource showColor}" TextAlignment="Center"
                                       VerticalAlignment="Center"/>
                        </Grid>
                        <StackPanel HorizontalAlignment="Left" Grid.Row="1" Margin="0">

                            <TextBlock 
                                Text="Ngày nhập: "
                                FontSize="14"
                                HorizontalAlignment="Left"
                                Margin="5"
                            />

                            <DatePicker
                                x:Name="startDatePicker" Width="150" HorizontalAlignment="Center"
                                FirstDayOfWeek="Monday" Focusable="False"
                                SelectedDate="{Binding CakeImport.ImportDate, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" 
                                Margin="5"

                            >
                            </DatePicker>

                            <TextBlock 
                                Text="Ngày hết hạn: "
                                FontSize="14"
                                Margin="5"
                                HorizontalAlignment="Left"
                            />

                            <DatePicker
                                x:Name="expireDatePicker" Width="150" HorizontalAlignment="Center"
                                FirstDayOfWeek="Monday" Focusable="False"
                                SelectedDate="{Binding CakeImport.ExpirationDate, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" 
                                Margin="5"
                            >
                            </DatePicker>
                        </StackPanel>
                    </Grid>
                </Grid>
                <Grid Grid.Column="2">
                    <Border Grid.Row="1" Panel.ZIndex="-1" Opacity="0.9" Margin="0 0 0 0">
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="5"
                                          Opacity=".5"
                                          ShadowDepth="3" />
                        </Border.Effect>
                        <Border 
                            BorderBrush="White"
                            Background="Transparent"
                            BorderThickness="3.5"
                            CornerRadius="15">
                        </Border>
                    </Border>
                    <StackPanel 
                        Grid.Row="1" Margin="20 20 20 0"
                        Panel.ZIndex="1"
                    >
                        <Grid>
                            <TextBlock 
                                Padding="15" Background="#FFEED3"
                               Margin="10 10 10 10"
                            />
                            <TextBox x:Name="inputNameImport" FontSize="15" Padding="30 5 5 0" 
                                 Foreground="{StaticResource showColor}" TextWrapping="Wrap" 
                                 Text="{Binding CakeImport.ImportOrderName, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"
                                 Margin="10 10 10 10"
                                 KeyDown="TextBoxInput_KeyDown"
                            >
                                <TextBox.Style>
                                    <Style TargetType="TextBox" xmlns:sys="clr-namespace:System;assembly=mscorlib">
                                        <Style.Resources>
                                            <VisualBrush x:Key="hintname" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                                                <VisualBrush.Visual>
                                                    <StackPanel 
                                                    Orientation="Horizontal"
                                                >
                                                        <Label Width="10"/>
                                                        <Label Content="Tên đơn hàng" Margin="10 0 0 0"
                                                           Foreground="{StaticResource hintTextColor}" FontSize="15" />
                                                    </StackPanel>

                                                </VisualBrush.Visual>
                                            </VisualBrush>
                                        </Style.Resources>
                                        <Style.Triggers>
                                            <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                                                <Setter Property="Background" Value="{StaticResource hintname}" />
                                                <Setter Property="BorderBrush" Value="{StaticResource hintTextColor}"/>
                                            </Trigger>
                                            <Trigger Property="Text" Value="{x:Null}">
                                                <Setter Property="Background" Value="{StaticResource hintname}" />
                                                <Setter Property="BorderBrush" Value="{StaticResource hintTextColor}"/>
                                            </Trigger>
                                            <Trigger Property="IsKeyboardFocused" Value="True">
                                                <Setter Property="Background" Value="{StaticResource transparentColor}" />
                                            </Trigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding RelativeSource={x:Static RelativeSource.Self},Path=IsKeyboardFocused}" Value="False" />
                                                    <Condition Binding="{Binding RelativeSource={x:Static RelativeSource.Self},Path=Text, Converter={StaticResource stringConverter}}" Value="1"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Background" Value="{StaticResource transparentColor}"/>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </Grid>
                        <Grid Grid.Column="1" Margin="10 10 15 10">
                            <Button 
                                x:Name="NameCake" Style="{StaticResource suggestWordButton}" 
                                Content="{Binding CakeImport.ProductID, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window},
                                Converter={StaticResource IDtoNameCakeConverter}}"
                                FontSize="15" Click="NameCake_Click"
                            />
                        </Grid>

                        <Grid
                        >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>

                            <Grid Grid.Column="0" Margin="0 5">
                                <TextBlock 
                                Padding="15" Background="#FFEED3"
                                Margin="10 10 10 10"
                            />
                                <TextBox 
                                    x:Name="inputQuantity" FontSize="15" Padding="10 5 5 0" 
                                    Foreground="{StaticResource showColor}" TextWrapping="Wrap"
                                    Text="{Binding CakeImport.Quantity, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"
                                    Margin="10 10 10 10"
                                    KeyDown="TextBoxInput_KeyDown"
                                    ToolTip="Số lượng"
                                >
                                    <TextBox.Style>
                                        <Style TargetType="TextBox" xmlns:sys="clr-namespace:System;assembly=mscorlib">
                                            <Style.Resources>
                                                <VisualBrush x:Key="hintname" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                                                    <VisualBrush.Visual>
                                                        <StackPanel 
                                                        Orientation="Horizontal"
                                                    >
                                                            <Label Content="Số lượng" Margin="0 0 0 0" 
                                                               Foreground="{StaticResource hintTextColor}" FontSize="15" />
                                                        </StackPanel>

                                                    </VisualBrush.Visual>
                                                </VisualBrush>
                                            </Style.Resources>
                                            <Style.Triggers>
                                                <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                                                    <Setter Property="Background" Value="{StaticResource hintname}" />
                                                    <Setter Property="BorderBrush" Value="{StaticResource hintTextColor}"/>
                                                </Trigger>
                                                <Trigger Property="Text" Value="{x:Null}">
                                                    <Setter Property="Background" Value="{StaticResource hintname}" />
                                                    <Setter Property="BorderBrush" Value="{StaticResource hintTextColor}"/>
                                                </Trigger>
                                                <Trigger Property="IsKeyboardFocused" Value="True">
                                                    <Setter Property="Background" Value="{StaticResource transparentColor}" />
                                                </Trigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding RelativeSource={x:Static RelativeSource.Self},Path=IsKeyboardFocused}" Value="False" />
                                                        <Condition Binding="{Binding RelativeSource={x:Static RelativeSource.Self},Path=Text, Converter={StaticResource stringConverter}}" Value="1"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Background" Value="{StaticResource transparentColor}"/>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                            </Grid>

                            <Grid Grid.Column="1" Margin="0 5">
                                <TextBlock 
                                Padding="15" Background="#FFEED3"
                                Margin="10 10 10 10"
                            />
                                <TextBox 
                                    x:Name="inputImportPrice" FontSize="15" Padding="10 5 5 0" 
                                    Foreground="{StaticResource showColor}" TextWrapping="Wrap"
                                    Text="{Binding CakeImport.ImportPrice, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window},
                                    Converter={StaticResource moneyConverter}}"
                                    Margin="10 10 10 10"
                                    KeyDown="TextBoxInput_KeyDown"
                                    ToolTip="Đơn giá"
                                >
                                    <TextBox.Style>
                                        <Style TargetType="TextBox" xmlns:sys="clr-namespace:System;assembly=mscorlib">
                                            <Style.Resources>
                                                <VisualBrush x:Key="hintname" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                                                    <VisualBrush.Visual>
                                                        <StackPanel 
                                                        Orientation="Horizontal"
                                                    >
                                                            <Label Content="Đơn Giá" Margin="0 0 0 0" 
                                                               Foreground="{StaticResource hintTextColor}" FontSize="15" />
                                                        </StackPanel>

                                                    </VisualBrush.Visual>
                                                </VisualBrush>
                                            </Style.Resources>
                                            <Style.Triggers>
                                                <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                                                    <Setter Property="Background" Value="{StaticResource hintname}" />
                                                    <Setter Property="BorderBrush" Value="{StaticResource hintTextColor}"/>
                                                </Trigger>
                                                <Trigger Property="Text" Value="{x:Null}">
                                                    <Setter Property="Background" Value="{StaticResource hintname}" />
                                                    <Setter Property="BorderBrush" Value="{StaticResource hintTextColor}"/>
                                                </Trigger>
                                                <Trigger Property="IsKeyboardFocused" Value="True">
                                                    <Setter Property="Background" Value="{StaticResource transparentColor}" />
                                                </Trigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding RelativeSource={x:Static RelativeSource.Self},Path=IsKeyboardFocused}" Value="False" />
                                                        <Condition Binding="{Binding RelativeSource={x:Static RelativeSource.Self},Path=Text, Converter={StaticResource stringConverter}}" Value="1"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Background" Value="{StaticResource transparentColor}"/>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                            </Grid>

                        </Grid>

                    </StackPanel>
                </Grid>
            </Grid>
        </Grid>
        <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right" Margin="10">
            <Button x:Name="actionBtn" Content="{Binding ActionName, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" 
                    Margin="0 0 10 0" Click="actionBtn_Click" Padding="5" MaxHeight="40" MinWidth="60" 
                    Style="{DynamicResource sgraykbtnstyle}"/>
            <Button x:Name="deleteBtn" Content="Xóa" Margin="0 0 10 0" Click="deleteBtn_Click" Padding="5" 
                    MaxHeight="40" MinWidth="60" Style="{DynamicResource sgraykbtnstyle}"/>
            <Button x:Name="cancelBtn" Content="Thoát" Margin="0 0 50 0" Click="cancelBtn_Click" Padding="5" 
                    MaxHeight="40" MinWidth="60" Style="{DynamicResource sgraykbtnstyle}"/>
        </StackPanel>
    </Grid>
</Window>
