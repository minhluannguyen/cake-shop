<Fluent:RibbonWindow 
    x:Class="CakeShop.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:Fluent="clr-namespace:Fluent;assembly=Fluent"
    xmlns:local="clr-namespace:CakeShop"
    mc:Ignorable="d"
    Title="Cake Store"
    Height="700" 
    Width="1350"
    WindowStartupLocation="CenterScreen"
    ResizeMode="NoResize"
    WindowStyle="None"
    Loaded="RibbonWindow_Loaded"
>
    <Window.Icon>
        <BitmapImage UriSource="Images/cookies.png" RenderOptions.BitmapScalingMode="HighQuality"/>
    </Window.Icon>
    
    
    <Fluent:RibbonWindow.Resources>
        <local:IsEmptyStringConverter x:Key="stringConverter"/>
        <local:RawPriceToPriceConverter x:Key="priceConverter"/>
        <Style TargetType="ListViewItem">
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        </Style>
        <Style TargetType="{x:Type GridViewColumnHeader}" >
            <Setter Property="MinWidth" Value="200" />
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="bgKeyColor" Color="#FFEED3"/>
        <SolidColorBrush x:Key="whiteShowColor" Color="#F7ECCD"/>
        <SolidColorBrush x:Key="hintTextColor" Color="#B8693E"/>
        <SolidColorBrush x:Key="showColor" Color="#704026"/>
        <SolidColorBrush x:Key="transparentColor" Color="Transparent"/>
        <SolidColorBrush x:Key="hoverbutton" Color="#008EFF"/>
        <SolidColorBrush x:Key="clickbutton" Color="#006BBF"/>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Background" TargetName="border" Value="#acb0ad"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#00ADD9"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style
            x:Key="sgraykbtnstyle" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="10" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Background" TargetName="border" Value="{StaticResource hoverbutton}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource hoverbutton}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource clickbutton}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource clickbutton}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>
        <Style
            x:Key="suggestWordButton" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="5" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Background" TargetName="border" Value="{StaticResource bgKeyColor}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource hoverbutton}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource bgKeyColor}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource clickbutton}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource bgKeyColor}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource bgKeyColor}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="FontSize" Value="20"/>
                                <Setter Property="Padding" Value="10"/>
                                <Setter Property="Foreground" Value="{StaticResource hintTextColor}"/>
                                <Setter Property="FontWeight" Value="DemiBold"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>
    </Fluent:RibbonWindow.Resources>
    <DockPanel LastChildFill="True">
        <DockPanel.Background>
            <ImageBrush ImageSource="Images/Background/bg.jpg" Opacity="0.8"/>
        </DockPanel.Background>
        <Grid DockPanel.Dock="Top" Height="60" Margin="10">
            <!--<Button x:Name="OpenBackstage" Click="OpenBackstage_Click">
                <StackPanel Orientation="Horizontal">
                    <Image Source="/Images/cookies.png" />
                    <TextBlock Text="We Split"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               FontSize="37"
                               Foreground="#6A4E4A" 
                               FontWeight="Bold"
                               Margin="30" 
                               FontFamily="Roboto Black"
                               Background="Transparent"
                        />
                </StackPanel>
            </Button>-->
            <Fluent:Ribbon Height="50" Margin="0,0,1142,0">
                <Fluent:Ribbon.Menu>
                    <Fluent:Backstage x:Name="backstage" Background="#F6CCA2"
                    >
                        <Fluent:Backstage.Header>
                            <StackPanel Orientation="Horizontal">
                                <Image Source="/Images/cookies.png" Height="40" IsEnabled="False"/>
                                <TextBlock 
                                    Text="Cake Store"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    FontSize="20"
                                    Foreground="#6A4E4A" 
                                    FontWeight="Bold"
                                    Margin="15 13 13 13" 
                                    FontFamily="Roboto Black"
                                    Background="Transparent"
                                    IsEnabled="False"
                                />
                            </StackPanel>
                        </Fluent:Backstage.Header>
                        <Fluent:BackstageTabControl Background="#F6E5D8">
                            <Fluent:BackstageTabItem Header="Thống Kê" FontSize="15" FontWeight="DemiBold">
                                
                            </Fluent:BackstageTabItem>
                            <Fluent:SeparatorTabItem/>
                            <Fluent:BackstageTabItem Header="Loại Bánh" FontSize="15" FontWeight="DemiBold">
                                <Fluent:BackstageTabItem.ContentTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="9*"/>
                                                <RowDefinition Height="0.5*"/>
                                                <RowDefinition Height="0.5*"/>
                                            </Grid.RowDefinitions>
                                            <ListView 
                                                    Grid.Row="0"
                                                    x:Name="typeCakeListViewRibbon"
                                                    Foreground="Black"
                                                    Margin="30">
                                                <ListView.View>
                                                    <GridView>
                                                        <GridViewColumn Width="auto" DisplayMemberBinding="{Binding TENTV}">
                                                            <GridViewColumn.Header>
                                                                <GridViewColumnHeader Tag="Mã Bánh">Tên</GridViewColumnHeader>
                                                            </GridViewColumn.Header>
                                                        </GridViewColumn>
                                                        <GridViewColumn Width="auto" DisplayMemberBinding="{Binding SDT}">
                                                            <GridViewColumn.Header>
                                                                <GridViewColumnHeader Tag="Tên Bánh">Số điện thoại</GridViewColumnHeader>
                                                            </GridViewColumn.Header>
                                                            <GridViewColumn.CellTemplate>
                                                                <DataTemplate>
                                                                    <TextBlock TextAlignment="Center"/>
                                                                </DataTemplate>
                                                            </GridViewColumn.CellTemplate>
                                                        </GridViewColumn>
                                                        <GridViewColumn Width="auto" DisplayMemberBinding="{Binding EMAIL}">
                                                            <GridViewColumn.Header>
                                                                <GridViewColumnHeader Tag="Số Chủng Loại">Email</GridViewColumnHeader>
                                                            </GridViewColumn.Header>
                                                        </GridViewColumn>
                                                    </GridView>
                                                </ListView.View>
                                                <ListView.ItemContainerStyle>
                                                    <Style TargetType="ListViewItem">
                                                        <EventSetter Event="PreviewMouseLeftButtonDown" Handler="TypeCake_PreviewMouseLeftButtonDown" />
                                                    </Style>
                                                </ListView.ItemContainerStyle>
                                            </ListView>
                                            <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right">
                                                <Button x:Name="addNewTypeCakeBtn"
                                                Content="Thêm Loại Bánh"
                                                Margin="10 -10 50 10"
                                                Padding="5"
                                                FontSize="13"
                                                Foreground="White"
                                                Background="#0078D7"
                                                Style="{DynamicResource sgraykbtnstyle}"
                                                Click="addNewTypeCake_Click"/>

                                            </StackPanel>
                                        </Grid>
                                    </DataTemplate>
                                </Fluent:BackstageTabItem.ContentTemplate>
                            </Fluent:BackstageTabItem>
                            <Fluent:BackstageTabItem Header="Bánh" FontSize="15" FontWeight="DemiBold">

                            </Fluent:BackstageTabItem>
                            <Fluent:SeparatorTabItem/>
                            <Fluent:BackstageTabItem Header="Nhập Kho" FontSize="15" FontWeight="DemiBold">

                            </Fluent:BackstageTabItem>
                            <Fluent:BackstageTabItem Header="Tạo Đơn Hàng" FontSize="15" FontWeight="DemiBold">

                            </Fluent:BackstageTabItem>
                            <Fluent:SeparatorTabItem/>
                            <Fluent:BackstageTabItem Header="Cài Đặt" FontSize="15" FontWeight="DemiBold">

                            </Fluent:BackstageTabItem>
                            <Fluent:SeparatorTabItem/>
                            <Fluent:BackstageTabItem Header="Thoát" FontSize="15" FontWeight="DemiBold" 
                                           MouseLeftButtonDown="FluentButtonQuit_MouseLeftButtonDown"/>
                        </Fluent:BackstageTabControl>
                    </Fluent:Backstage>
                </Fluent:Ribbon.Menu>
            </Fluent:Ribbon>
        </Grid>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="4.5*"/>
                <ColumnDefinition Width="5.5*"/>
            </Grid.ColumnDefinitions>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="2.*"/>
                    <RowDefinition Height="1.5*"/>
                    <RowDefinition Height="4.7*"/>
                    <RowDefinition Height="2.*"/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="1" Margin="20">
                    <TextBlock Padding="10" Background="#FFEED3"/>
                    <TextBox 
                        x:Name="txtboxSearch" 
                        FontSize="20" 
                        Padding="5" 
                        Foreground="{StaticResource showColor}" 
                        TextWrapping="Wrap"                             
                        Height="50"
                        KeyDown="txtboxSearch_KeyDown"
                    >
                        <TextBox.Style>
                            <Style TargetType="TextBox" xmlns:sys="clr-namespace:System;assembly=mscorlib">
                                <Style.Resources>
                                    <VisualBrush x:Key="hintname" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                                        <VisualBrush.Visual>
                                            <StackPanel 
                                                Orientation="Horizontal"
                                            >
                                                <Label Width="10" />
                                                <Image 
                                                    x:Name="searchImage" 
                                                    RenderOptions.BitmapScalingMode="HighQuality"
                                                    Width="20"
                                                    Height="20"
                                                    Source="Images/search-brown.png"
                                                />
                                                <Label Content="Nhập vào để tìm kiếm (Nhấn Enter để tìm)" Margin="5 0 0 0" Foreground="{StaticResource hintTextColor}" FontSize="18" />
                                            </StackPanel>

                                        </VisualBrush.Visual>
                                    </VisualBrush>
                                </Style.Resources>
                                <Style.Triggers>
                                    <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                                        <Setter Property="Background" Value="{StaticResource hintname}" />
                                        <Setter Property="BorderBrush" Value="{StaticResource hintTextColor}"/>
                                    </Trigger>
                                    <Trigger Property="Text" Value="{x:Null}">
                                        <Setter Property="Background" Value="{StaticResource hintname}" />
                                        <Setter Property="BorderBrush" Value="{StaticResource hintTextColor}"/>
                                    </Trigger>
                                    <Trigger Property="IsKeyboardFocused" Value="True">
                                        <Setter Property="Background" Value="{StaticResource transparentColor}" />
                                    </Trigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding RelativeSource={x:Static RelativeSource.Self},Path=IsKeyboardFocused}" Value="False" />
                                            <Condition Binding="{Binding RelativeSource={x:Static RelativeSource.Self},Path=Text, Converter={StaticResource stringConverter}}" Value="1"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Background" Value="{StaticResource transparentColor}"/>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                </Grid>
                <!--this will be list suggest word-->
                <Grid
                    Grid.Row="2"
                >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="100" />
                        <RowDefinition Height="2*" />
                    </Grid.RowDefinitions>
                    
                    <Button 
                        Style="{DynamicResource suggestWordButton}" 
                        Content="Sort / Filter"
                        Margin="230, 25"
                        Cursor="None"
                    />
                    <StackPanel
                        Orientation="Horizontal"
                        Margin="0, 20"
                        Grid.Row="1"
                    >
                        <StackPanel
                            Margin="20 20" 
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Top"
                            Orientation="Vertical"
                        >

                            <TextBlock
                                Foreground="AntiqueWhite"
                                FontSize="20"
                                Text="Loại bánh: "
                            />

                            <ComboBox
                                x:Name="CakeTypeComboBox"
                                Margin="0, 5"
                                Width="150" 
                                SelectionChanged="CakeTypeComboBox_SelectionChanged"
                            >
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock 
                                            Text="{Binding NameTypeCake}" 
                                            FontWeight="Bold" 
                                            Foreground="Blue"/>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                        </StackPanel>

                        <StackPanel
                            Margin="80 20" 
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Top"
                            Orientation="Vertical"
                        >

                            <TextBlock
                                Foreground="AntiqueWhite"
                                FontSize="20"
                                Text="Sắp xếp theo: "
                            />

                            <ComboBox
                                x:Name="SortOptionComboBox"
                                Margin="0, 5"
                                Width="150" 
                                SelectionChanged="SortOptionComboBox_SelectionChanged"
                            >
                                <ComboBoxItem
                                    IsSelected="True"
                                >
                                    <TextBlock 
                                        Text="Tên (A - Z)" 
                                        FontWeight="Bold" 
                                        Foreground="Blue"/>
                                </ComboBoxItem>
                                <ComboBoxItem
                                >
                                    <TextBlock 
                                        Text="Tên (Z - A)" 
                                        FontWeight="Bold" 
                                        Foreground="Blue"/>
                                </ComboBoxItem>
                                <ComboBoxItem
                                >
                                    <TextBlock 
                                        Text="Giá (tăng dần)" 
                                        FontWeight="Bold" 
                                        Foreground="Blue"/>
                                </ComboBoxItem>
                                <ComboBoxItem
                                >
                                    <TextBlock 
                                        Text="Giá (giảm dần)" 
                                        FontWeight="Bold" 
                                        Foreground="Blue"/>
                                </ComboBoxItem>
                            </ComboBox>
                        </StackPanel>

                    </StackPanel>
                </Grid>
            </Grid>
            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="0.5*"/>
                    <RowDefinition Height="7*"/>
                    <RowDefinition Height="1*"/>
                </Grid.RowDefinitions>
                <Border x:Name="borderOfListView" 
                        Opacity="0.8"
                        Margin="10"
                        VerticalAlignment="Top"
                        BorderBrush="#F73148"
                        BorderThickness=".5"
                        CornerRadius="18"
                        Grid.Row="1"
                >
                    <Border.Effect>
                        <DropShadowEffect BlurRadius="5"
                                          Opacity=".5"
                                          ShadowDepth="3" />
                    </Border.Effect>
                    <Border Name="ReceiverColor"
                            BorderBrush="#F73148"
                            BorderThickness="0"
                            CornerRadius="15">
                        <Grid>
                            <Border Name="Mask"
                                Background="#FFEEE0"
                                BorderBrush="#F73148"
                                BorderThickness=".5"
                                CornerRadius="13"
                            >
                            </Border>
                            <!--this is list of cake-->
                            <StackPanel>
                                <ListView 
                                    x:Name="productListView"
                                    BorderBrush="Transparent"
                                    Foreground="#fd5533"
                                    ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                    ScrollViewer.VerticalScrollBarVisibility="Visible"
                                    Height="480"
                                >
                                    <ListView.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <WrapPanel 
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                            />
                                        </ItemsPanelTemplate>
                                    </ListView.ItemsPanel>
                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel
                                                Cursor="Hand"
                                            >
                                                <Grid>
                                                    <Grid.Resources>
                                                        <Style TargetType="{x:Type Border}" x:Key="styleBorder">
                                                            <Style.Triggers>
                                                                <EventTrigger RoutedEvent="MouseEnter">
                                                                    <BeginStoryboard>
                                                                        <Storyboard>
                                                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Height" To="150" />
                                                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Width" To="250" />
                                                                        </Storyboard>
                                                                    </BeginStoryboard>
                                                                </EventTrigger>
                                                                <EventTrigger RoutedEvent="MouseLeave">
                                                                    <BeginStoryboard>
                                                                        <Storyboard>
                                                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Height" To="100" />
                                                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Width" To="200" />
                                                                        </Storyboard>
                                                                    </BeginStoryboard>
                                                                </EventTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Grid.Resources>

                                                    <Border
                                                        CornerRadius="20,20,20,20"
                                                        Width="200" Height="100"
                                                        Margin="0, 0, 0, 0"
                                                        Style="{StaticResource styleBorder}" 
                                                    >
                                                        <Border.Background>
                                                            <ImageBrush 
                                                                Stretch="Fill"
                                                                ImageSource="{Binding Thumbnail}"
                                                                RenderOptions.BitmapScalingMode="HighQuality"
                                                            />
                                                        </Border.Background>
                                                    </Border>
                                                </Grid>
                                                
                                                <TextBlock 
                                                    HorizontalAlignment="Left"
                                                    FontSize="16"
                                                    Text="{Binding ProductInfo.Name}"
                                                />

                                                <TextBlock 
                                                    HorizontalAlignment="Left"
                                                    FontSize="16"
                                                    Text="{Binding ProductInfo.Price, Converter={StaticResource priceConverter}}"
                                                />

                                                <Button 
                                                    Style="{DynamicResource suggestWordButton}" 
                                                    Content="Thêm vào giỏ"
                                                    FontSize="15"
                                                />

                                            </StackPanel>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                    <ListView.ItemContainerStyle>
                                        <Style TargetType="ListViewItem">
                                            <EventSetter Event="PreviewMouseLeftButtonDown" Handler="ListViewItem_PreviewMouseLeftButtonDown" />
                                        </Style>
                                    </ListView.ItemContainerStyle>
                                </ListView>
                                
                                <StackPanel.OpacityMask>
                                    <VisualBrush Visual="{Binding ElementName=Mask}" />
                                </StackPanel.OpacityMask>
                            </StackPanel>
                        </Grid>
                    </Border>
                </Border>

                <Grid
                    Grid.Row="2"
                >
                    <StackPanel
                        x:Name="pageNumberStackPanel" 
                        Orientation="Horizontal"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Margin="0, 0, 0, 15"                        
                        Grid.Column="1"
                    >
                        <Button 
                            x:Name="firstPageNumButton"
                            Background="#fd5533"
                            BorderBrush="Transparent"
                            Height="30"
                            Width="30"
                            Margin="5, 0, 0, 0"
                            Style="{DynamicResource ButtonStyle1}"
                            Click="firstPageNumButton_Click"
                        >
                            <Button.Content
                            >
                                <Image 
                                    RenderOptions.BitmapScalingMode="HighQuality"
                                    Width="15"
                                    Height="15"
                                    Source="Images/first-page-arrow.png"
                                />
                            </Button.Content>
                        </Button>

                        <Button x:Name="prevPageNumButton"
                            Background="#fd5533"
                            BorderBrush="Transparent"
                            Click="prevPageButton_Click"
                            Height="30"
                            Width="30"
                            Margin="5, 0, 0, 0"
                            Style="{DynamicResource ButtonStyle1}"
                        >
                            <Button.Content>
                                <Image 
                                    RenderOptions.BitmapScalingMode="HighQuality"
                                    Width="15"
                                    Height="15"
                                    Source="Images/prev-page-arrow.png"
                                />
                            </Button.Content>
                        </Button>

                        <Button x:Name="nextPageNumButton"
                            Background="#fd5533"
                            BorderBrush="Transparent"
                            Click="nextPageButton_Click"
                            Height="30"
                            Width="30"
                            Margin="5, 0, 0, 0"
                            Style="{DynamicResource ButtonStyle1}"
                        >
                            <Button.Content>
                                <Image 
                                    RenderOptions.BitmapScalingMode="HighQuality"
                                    Width="15"
                                    Height="15"
                                    Source="Images/next-page-arrow.png"
                                />
                            </Button.Content>
                        </Button>

                        <Button x:Name="lastPageNumButton"
                            Background="#fd5533"
                            BorderBrush="Transparent"
                            Click="lastPageNumButton_Click"
                            Height="30"
                            Width="30"
                            Margin="5, 0, 0, 0"
                            Style="{DynamicResource ButtonStyle1}"
                        >
                            <Button.Content>
                                <Image 
                                    RenderOptions.BitmapScalingMode="HighQuality"
                                    Width="15"
                                    Height="15"
                                    Source="Images/last-page-arrow.png"
                                />
                            </Button.Content>
                        </Button>
                    </StackPanel>
                </Grid>
                
            </Grid>
        </Grid>
    </DockPanel>
</Fluent:RibbonWindow>
