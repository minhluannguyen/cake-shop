<Window x:Class="CakeShop.Bill"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CakeShop"
        mc:Ignorable="d" WindowStartupLocation="CenterOwner"
        Title="Bill" Height="450" Width="800" ResizeMode="NoResize">
    <Window.Resources>
        <local:WPF_IntToStringConverter x:Key="intToStringConverter"/>
        <local:IsEmptyStringConverter x:Key="stringConverter"/>
        <local:IntToMoneyStringConverter x:Key="moneyConverter"/>
        <local:LinkImageConverter x:Key="LinkImgConverter"/>
        <local:TypeCakeNameConverter x:Key="IDtoNameTypeCakeConverter"/>
        <local:WPF_ID_ProductToThumnailConverter x:Key="fromID_ProductToThumbnailConverter"/>

        <SolidColorBrush x:Key="listCakeBackgroundColor" Color="White"/>
        <SolidColorBrush x:Key="borderBtnEnable" Color="White"/>
        <SolidColorBrush x:Key="borderBtnHover" Color="Black"/>
        <SolidColorBrush x:Key="backgroundBtnEnable" Color="Transparent"/>
        <SolidColorBrush x:Key="backgroundBtnHover" Color="Gray"/>
        <SolidColorBrush x:Key="bgKeyColor" Color="#FFEED3"/>
        <SolidColorBrush x:Key="whiteShowColor" Color="#F7ECCD"/>
        <SolidColorBrush x:Key="hintTextColor" Color="#B8693E"/>
        <SolidColorBrush x:Key="showColor" Color="#704026"/>
        <SolidColorBrush x:Key="transparentColor" Color="Transparent"/>
        <SolidColorBrush x:Key="hoverbutton" Color="#008EFF"/>
        <SolidColorBrush x:Key="clickbutton" Color="#006BBF"/>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>

        <Style x:Key="cursorArrowFull" TargetType="{x:Type TextBlock}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Arrow"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="False">
                    <Setter Property="Cursor" Value="Arrow"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style
            x:Key="suggestWordButton" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="5" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Background" TargetName="border" Value="{StaticResource backgroundBtnHover}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource borderBtnHover}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource bgKeyColor}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource clickbutton}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource bgKeyColor}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource backgroundBtnEnable}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource borderBtnEnable}"/>
                                <Setter Property="FontSize" Value="20"/>
                                <Setter Property="Padding" Value="10"/>
                                <Setter Property="Foreground" Value="{StaticResource hintTextColor}"/>
                                <Setter Property="FontWeight" Value="DemiBold"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>
        <Style
            x:Key="sgraykbtnstyle" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="10" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Background" TargetName="border" Value="{StaticResource hoverbutton}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource hoverbutton}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource clickbutton}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource clickbutton}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>
    </Window.Resources>
    <Window.Background>
        <SolidColorBrush Color="#E2E3DD" Opacity="1"/>
    </Window.Background>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="0.75*"/>
            <RowDefinition Height="5.5*"/>
            <RowDefinition Height="1.0*"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Center">
            <TextBlock Text="Thanh Toán Hóa Đơn" 
                       Margin="0 0 10 0" Padding="5" MaxHeight="40" MinWidth="60" TextAlignment="Center"
                       Foreground="{StaticResource showColor}" FontWeight="Bold" FontSize="20"/>
        </Grid>
        <Grid Grid.Row="1" Margin="20 0">
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2.4*"/>
                    <ColumnDefinition Width="0.1*"/>
                    <ColumnDefinition Width="7.5*"/>
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0">
                    <Border Grid.Row="1" Panel.ZIndex="-1" Opacity="0.9" Margin="0 0 0 0">
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="5"
                                          Opacity=".5"
                                          ShadowDepth="3" />
                        </Border.Effect>
                        <Border 
                            BorderBrush="White"
                            Background="Transparent"
                            BorderThickness="3.5"
                            CornerRadius="15">
                        </Border>
                    </Border>
                    <Grid Grid.Row="1" Margin="20 20 20 20"
                        Panel.ZIndex="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="1.5*"/>
                            <RowDefinition Height="5*"/>
                            <RowDefinition Height="3.5*"/>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0" VerticalAlignment="Center" Margin="0 0 0 5">
                            <TextBlock Padding="10 5 10 5" Background="#FFEED3" FontSize="15" TextAlignment="Left" VerticalAlignment="Center"/>
                            <TextBox Padding="10 5 10 5" FontSize="15" Foreground="{StaticResource showColor}" TextAlignment="Left" TextWrapping="Wrap"
                                       VerticalAlignment="Center" x:Name="phoneNumberPlace" LostFocus="phoneNumberPlace_LostFocus" KeyDown="phoneNumberPlace_KeyDown"
                                     Text="{Binding PhoneNumber}">
                                <TextBox.Style>
                                    <Style TargetType="TextBox" xmlns:sys="clr-namespace:System;assembly=mscorlib">
                                        <Style.Resources>
                                            <VisualBrush x:Key="hintname" AlignmentX="Center" AlignmentY="Center" 
                                                         Stretch="None">
                                                <VisualBrush.Visual>
                                                    <Grid>
                                                        <TextBlock Text="Số điện thoại" FontSize="15"
                                                                   Foreground="{StaticResource hintTextColor}" />
                                                    </Grid>

                                                </VisualBrush.Visual>
                                            </VisualBrush>
                                        </Style.Resources>
                                        <Style.Triggers>
                                            <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                                                <Setter Property="Background" Value="{StaticResource hintname}" />
                                                <Setter Property="BorderBrush" Value="{StaticResource hintTextColor}"/>
                                            </Trigger>
                                            <Trigger Property="Text" Value="{x:Null}">
                                                <Setter Property="Background" Value="{StaticResource hintname}" />
                                                <Setter Property="BorderBrush" Value="{StaticResource hintTextColor}"/>
                                            </Trigger>
                                            <Trigger Property="IsKeyboardFocused" Value="True">
                                                <Setter Property="Background" Value="{StaticResource transparentColor}" />
                                            </Trigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding RelativeSource={x:Static RelativeSource.Self},Path=IsKeyboardFocused}" Value="False" />
                                                    <Condition Binding="{Binding RelativeSource={x:Static RelativeSource.Self},Path=Text, Converter={StaticResource stringConverter}}" Value="1"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Background" Value="{StaticResource transparentColor}"/>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </Grid>
                        <Grid Grid.Row="1" Margin="0">
                            <TextBlock Padding="10 20 0 20" Background="#FFEED3" FontSize="15"/>
                            <TextBox x:Name="inputNameCustomer" Padding="10 20 10 20" 
                                     Foreground="{StaticResource showColor}" TextWrapping="Wrap" FontSize="15"
                                     Text="{Binding NameCustomer}"
                                 >
                                <TextBox.Style>
                                    <Style TargetType="TextBox" xmlns:sys="clr-namespace:System;assembly=mscorlib">
                                        <Style.Resources>
                                            <VisualBrush x:Key="hintname" AlignmentX="Center" AlignmentY="Center" 
                                                         Stretch="None">
                                                <VisualBrush.Visual>
                                                    <Grid>
                                                        <TextBlock Text="Tên Khách Hàng" FontSize="15"
                                                                   Foreground="{StaticResource hintTextColor}" />
                                                    </Grid>

                                                </VisualBrush.Visual>
                                            </VisualBrush>
                                        </Style.Resources>
                                        <Style.Triggers>
                                            <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                                                <Setter Property="Background" Value="{StaticResource hintname}" />
                                                <Setter Property="BorderBrush" Value="{StaticResource hintTextColor}"/>
                                            </Trigger>
                                            <Trigger Property="Text" Value="{x:Null}">
                                                <Setter Property="Background" Value="{StaticResource hintname}" />
                                                <Setter Property="BorderBrush" Value="{StaticResource hintTextColor}"/>
                                            </Trigger>
                                            <Trigger Property="IsKeyboardFocused" Value="True">
                                                <Setter Property="Background" Value="{StaticResource transparentColor}" />
                                            </Trigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding RelativeSource={x:Static RelativeSource.Self},Path=IsKeyboardFocused}" Value="False" />
                                                    <Condition Binding="{Binding RelativeSource={x:Static RelativeSource.Self},Path=Text, Converter={StaticResource stringConverter}}" Value="1"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Background" Value="{StaticResource transparentColor}"/>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </Grid>

                        <Grid Grid.Row="2" Margin="0">
                            <TextBlock Padding="10 20 0 20" Background="Transparent" FontSize="15" TextAlignment="Right">
                                <Run Text="Tổng tiền hàng:     " FontWeight="DemiBold"/>
                                <LineBreak/>
                                <Run Text="{Binding TotalPrice, Converter={StaticResource moneyConverter}}" Foreground="Red" FontWeight="Bold"/>
                            </TextBlock>
                        </Grid>
                    </Grid>
                </Grid>
                <Grid Grid.Column="2">
                    <Border Grid.Row="1" Panel.ZIndex="-1" Opacity="0.9" Margin="0 0 0 0">
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="5"
                                          Opacity=".5"
                                          ShadowDepth="3" />
                        </Border.Effect>
                        <Border 
                            BorderBrush="White"
                            Background="Transparent"
                            BorderThickness="3.5"
                            CornerRadius="15">
                        </Border>
                    </Border>
                    <Grid Grid.Row="1" Margin="20 20 20 0"
                        Panel.ZIndex="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="1.5*"/>
                            <RowDefinition Height="8.5*"/>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0">
                            <TextBlock Text="Danh sách sản phẩm" FontSize="20" Foreground="{StaticResource showColor}" TextAlignment="Center"
                                       VerticalAlignment="Center"/>
                        </Grid>
                        <Grid Grid.Row="1" Margin="0 0 0 10">
                            <ListView x:Name="listProductInCart" ScrollViewer.HorizontalScrollBarVisibility="Disabled" Background="Transparent">
                                <ListView.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel 
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Top"
                                            Focusable="False"
                                        />
                                    </ItemsPanelTemplate>
                                </ListView.ItemsPanel>
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Cursor="Hand" Orientation="Horizontal">
                                            <Grid>
                                                <Grid.Resources>
                                                    <Style TargetType="{x:Type Border}" x:Key="styleBorder">
                                                        <Style.Triggers>
                                                            <EventTrigger RoutedEvent="MouseEnter">
                                                                <BeginStoryboard>
                                                                    <Storyboard>
                                                                        <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Height" To="84" />
                                                                        <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Width" To="126" />
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </EventTrigger>
                                                            <EventTrigger RoutedEvent="MouseLeave">
                                                                <BeginStoryboard>
                                                                    <Storyboard>
                                                                        <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Height" To="76" />
                                                                        <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Width" To="114" />
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </EventTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Grid.Resources>
                                                <Border Margin="10"
                                                        VerticalAlignment="Center"
                                                        BorderBrush="#F73148"
                                                        BorderThickness=".5"
                                                        CornerRadius="18"
                                                        Height="40" Width="60">
                                                    <Border Name="ReceiverColor"
                                                            BorderBrush="#F73148"
                                                            BorderThickness="0"
                                                            CornerRadius="15">
                                                        <Canvas>
                                                            <Border Name="Mask"
                                                                    Background="{StaticResource listCakeBackgroundColor}"
                                                                    BorderBrush="#F73148"
                                                                    BorderThickness=".5"
                                                                    CornerRadius="13"
                                                                    Height="40" Width="60">
                                                            </Border>
                                                            <StackPanel Orientation="Horizontal">
                                                                <StackPanel>
                                                                    <Image Stretch="Fill"
                                                                           VerticalAlignment="Top" RenderOptions.BitmapScalingMode="HighQuality"
                                                                           Source="{Binding ID_Product, Converter={StaticResource fromID_ProductToThumbnailConverter}}"
                                                                           Height="40" Width="60">
                                                                        <Image.Style>
                                                                            <Style TargetType="Image">
                                                                                <Style.Triggers>
                                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                                        <Setter Property="Cursor" Value="Hand"/>
                                                                                    </Trigger>
                                                                                    <Trigger Property="IsMouseOver" Value="False">
                                                                                        <Setter Property="Cursor" Value="Arrow"/>
                                                                                    </Trigger>
                                                                                </Style.Triggers>
                                                                            </Style>
                                                                        </Image.Style>
                                                                    </Image>
                                                                    <StackPanel.OpacityMask>
                                                                        <VisualBrush Visual="{Binding ElementName=Mask}" />
                                                                    </StackPanel.OpacityMask>
                                                                </StackPanel>
                                                                <TextBlock Text="{Binding Name}" Width="100" FontSize="13" Margin="5 0 0 0" 
                                                                                   TextWrapping="Wrap" VerticalAlignment="Center" Foreground="#403432" HorizontalAlignment="Center"
                                                                                   TextAlignment="Left" Style="{StaticResource cursorArrowFull}"/>
                                                                <TextBlock Text="{Binding ID_Type, Converter={StaticResource IDtoNameTypeCakeConverter}}"
                                                                                   Width="80" FontSize="10" Foreground="#403432" Margin="10 0 0 0" 
                                                                                   TextWrapping="Wrap" VerticalAlignment="Center" Style="{StaticResource cursorArrowFull}"
                                                                                   TextAlignment="Left"/>
                                                                <TextBlock Text="{Binding Price, Converter={StaticResource moneyConverter}}"
                                                                                   Width="80"  FontSize="10" Foreground="#403432" Margin="10 0 0 0" 
                                                                                   TextWrapping="Wrap" VerticalAlignment="Center" Style="{StaticResource cursorArrowFull}"
                                                                                   TextAlignment="Right"/>
                                                                <TextBlock Text="{Binding Quantity}"
                                                                                   Width="30" FontSize="10" Foreground="#403432" Margin="10 0 0 0" 
                                                                                   TextWrapping="Wrap" VerticalAlignment="Center" Style="{StaticResource cursorArrowFull}"
                                                                                   TextAlignment="Right"/>
                                                                <TextBlock Text="{Binding Amount, Converter={StaticResource moneyConverter}}"
                                                                                   Width="100" FontSize="10" Foreground="#403432" Margin="10 0 20 0" 
                                                                                   TextWrapping="Wrap" VerticalAlignment="Center" Style="{StaticResource cursorArrowFull}"
                                                                                   TextAlignment="Right"/>
                                                            </StackPanel>
                                                        </Canvas>
                                                    </Border>
                                                </Border>
                                            </Grid>
                                        </StackPanel>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                        </Grid>
                    </Grid>
                </Grid>
            </Grid>
        </Grid>
        <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right" Margin="10">
            <Button x:Name="deleteBtn" Content="Thanh Toán" Margin="0 0 10 0" Click="payBtn_Click" Padding="5" 
                    MaxHeight="40" MinWidth="60" Style="{DynamicResource sgraykbtnstyle}"/>
            <Button x:Name="cancelBtn" Content="Thoát" Margin="0 0 50 0" Click="cancelBtn_Click" Padding="5" 
                    MaxHeight="40" MinWidth="60" Style="{DynamicResource sgraykbtnstyle}"/>
        </StackPanel>
    </Grid>
</Window>
