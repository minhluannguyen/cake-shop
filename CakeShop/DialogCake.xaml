<Window x:Class="CakeShop.DialogCake"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CakeShop"
        mc:Ignorable="d"
        Title="DialogCake" Height="600" Width="900"
        WindowStartupLocation="CenterOwner"
        ResizeMode="NoResize"
        Closing="Window_Closing"
        Closed="Window_Closed">
    <Window.Resources>
        <local:WPF_IntToStringConverter x:Key="intToStringConverter"/>
        <local:IsEmptyStringConverter x:Key="stringConverter"/>
        <local:IntToMoneyStringConverter x:Key="moneyConverter"/>
        <local:LinkImageConverter x:Key="LinkImgConverter"/>
        <local:TypeCakeNameConverter x:Key="IDtoNameTypeCakeConverter"/>

        <SolidColorBrush x:Key="listCakeBackgroundColor" Color="White"/>
        <SolidColorBrush x:Key="borderBtnEnable" Color="White"/>
        <SolidColorBrush x:Key="borderBtnHover" Color="Black"/>
        <SolidColorBrush x:Key="backgroundBtnEnable" Color="Transparent"/>
        <SolidColorBrush x:Key="backgroundBtnHover" Color="Gray"/>
        <SolidColorBrush x:Key="bgKeyColor" Color="#FFEED3"/>
        <SolidColorBrush x:Key="whiteShowColor" Color="#F7ECCD"/>
        <SolidColorBrush x:Key="hintTextColor" Color="#B8693E"/>
        <SolidColorBrush x:Key="showColor" Color="#704026"/>
        <SolidColorBrush x:Key="transparentColor" Color="Transparent"/>
        <SolidColorBrush x:Key="hoverbutton" Color="#008EFF"/>
        <SolidColorBrush x:Key="clickbutton" Color="#006BBF"/>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style
            x:Key="suggestWordButton" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="5" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Background" TargetName="border" Value="{StaticResource backgroundBtnHover}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource borderBtnHover}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource bgKeyColor}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource clickbutton}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource bgKeyColor}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource backgroundBtnEnable}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource borderBtnEnable}"/>
                                <Setter Property="FontSize" Value="20"/>
                                <Setter Property="Padding" Value="10"/>
                                <Setter Property="Foreground" Value="{StaticResource hintTextColor}"/>
                                <Setter Property="FontWeight" Value="DemiBold"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>
        <Style
            x:Key="sgraykbtnstyle" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="10" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Background" TargetName="border" Value="{StaticResource hoverbutton}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource hoverbutton}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource clickbutton}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource clickbutton}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>
    </Window.Resources>
    <Window.Background>
        <SolidColorBrush Color="#E2E3DD" Opacity="1"/>
    </Window.Background>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="0.75*"/>
            <RowDefinition Height="5.5*"/>
            <RowDefinition Height="1.0*"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Center">
            <TextBlock Text="{Binding TitleAction, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" 
                       Margin="0 0 10 0" Padding="5" MaxHeight="40" MinWidth="60" TextAlignment="Center"
                       Foreground="{StaticResource showColor}" FontWeight="Bold" FontSize="20"/>
        </Grid>
        <Grid Grid.Row="1" Margin="40 0">
            <Grid.RowDefinitions>
                <RowDefinition Height="1.5*"/>
                <RowDefinition Height="8.5*"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="5.5*"/>
                    <ColumnDefinition Width="3*"/>
                    <ColumnDefinition Width="1.5*"/>
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0" Margin="10 5">
                    <TextBlock Padding="15" Background="#FFEED3"
                               Margin="10 10 10 10"/>
                    <TextBox x:Name="inputName" FontSize="15" Padding="30 5 5 0" 
                             Foreground="{StaticResource showColor}" TextWrapping="Wrap" 
                             Text="{Binding Cake.Name, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"
                             Margin="10 10 10 10"
                             KeyDown="TextBoxInput_KeyDown"
                         >
                        <TextBox.Style>
                            <Style TargetType="TextBox" xmlns:sys="clr-namespace:System;assembly=mscorlib">
                                <Style.Resources>
                                    <VisualBrush x:Key="hintname" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                                        <VisualBrush.Visual>
                                            <StackPanel 
                                                Orientation="Horizontal"
                                            >
                                                <Label Width="10"/>
                                                <Label Content="Tên Bánh" Margin="10 0 0 0"
                                                       Foreground="{StaticResource hintTextColor}" FontSize="15" />
                                            </StackPanel>

                                        </VisualBrush.Visual>
                                    </VisualBrush>
                                </Style.Resources>
                                <Style.Triggers>
                                    <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                                        <Setter Property="Background" Value="{StaticResource hintname}" />
                                        <Setter Property="BorderBrush" Value="{StaticResource hintTextColor}"/>
                                    </Trigger>
                                    <Trigger Property="Text" Value="{x:Null}">
                                        <Setter Property="Background" Value="{StaticResource hintname}" />
                                        <Setter Property="BorderBrush" Value="{StaticResource hintTextColor}"/>
                                    </Trigger>
                                    <Trigger Property="IsKeyboardFocused" Value="True">
                                        <Setter Property="Background" Value="{StaticResource transparentColor}" />
                                    </Trigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding RelativeSource={x:Static RelativeSource.Self},Path=IsKeyboardFocused}" Value="False" />
                                            <Condition Binding="{Binding RelativeSource={x:Static RelativeSource.Self},Path=Text, Converter={StaticResource stringConverter}}" Value="1"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Background" Value="{StaticResource transparentColor}"/>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                </Grid>
                <Grid Grid.Column="1" Margin="10 10 15 10">
                    <Button x:Name="NameTypeCake" Style="{StaticResource suggestWordButton}" 
                            Content="{Binding Cake.IDTypeCake, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window},
                        Converter={StaticResource IDtoNameTypeCakeConverter}}"
                            FontSize="15" Click="NameTypeCake_Click"/>
                </Grid>
                <Grid Grid.Column="2" Margin="0 5">
                    <TextBlock Padding="15" Background="#FFEED3"
                               Margin="10 10 10 10"/>
                    <TextBox x:Name="inputAmount" FontSize="15" Padding="10 5 5 0" 
                             Foreground="{StaticResource showColor}" TextWrapping="Wrap"
                             Text="{Binding Cake.Price, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window},
                        Converter={StaticResource moneyConverter}}"
                             Margin="10 10 10 10"
                             KeyDown="TextBoxInput_KeyDown"
                         >
                        <TextBox.Style>
                            <Style TargetType="TextBox" xmlns:sys="clr-namespace:System;assembly=mscorlib">
                                <Style.Resources>
                                    <VisualBrush x:Key="hintname" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                                        <VisualBrush.Visual>
                                            <StackPanel 
                                                Orientation="Horizontal"
                                            >
                                                <Label Content="Giá" Margin="0 0 0 0" 
                                                       Foreground="{StaticResource hintTextColor}" FontSize="15" />
                                            </StackPanel>

                                        </VisualBrush.Visual>
                                    </VisualBrush>
                                </Style.Resources>
                                <Style.Triggers>
                                    <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                                        <Setter Property="Background" Value="{StaticResource hintname}" />
                                        <Setter Property="BorderBrush" Value="{StaticResource hintTextColor}"/>
                                    </Trigger>
                                    <Trigger Property="Text" Value="{x:Null}">
                                        <Setter Property="Background" Value="{StaticResource hintname}" />
                                        <Setter Property="BorderBrush" Value="{StaticResource hintTextColor}"/>
                                    </Trigger>
                                    <Trigger Property="IsKeyboardFocused" Value="True">
                                        <Setter Property="Background" Value="{StaticResource transparentColor}" />
                                    </Trigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding RelativeSource={x:Static RelativeSource.Self},Path=IsKeyboardFocused}" Value="False" />
                                            <Condition Binding="{Binding RelativeSource={x:Static RelativeSource.Self},Path=Text, Converter={StaticResource stringConverter}}" Value="1"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Background" Value="{StaticResource transparentColor}"/>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                </Grid>
                
            </Grid>
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="3.0*"/>
                    <ColumnDefinition Width="0.1*"/>
                    <ColumnDefinition Width="6.9*"/>
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0">
                    <Border Grid.Row="1" Panel.ZIndex="-1" Opacity="0.9" Margin="0 0 0 0">
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="5"
                                          Opacity=".5"
                                          ShadowDepth="3" />
                        </Border.Effect>
                        <Border 
                            BorderBrush="White"
                            Background="Transparent"
                            BorderThickness="3.5"
                            CornerRadius="15">
                        </Border>
                    </Border>
                    <Grid Grid.Row="1" Margin="20 20 20 20"
                        Panel.ZIndex="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="2*"/>
                            <RowDefinition Height="8*"/>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0">
                            <TextBlock Text="Mô tả" FontSize="20" Foreground="{StaticResource showColor}" TextAlignment="Center"
                                       VerticalAlignment="Center"/>
                        </Grid>
                        <Grid Grid.Row="1" Margin="0">
                            <TextBlock Padding="15" Background="#FFEED3"/>
                            <TextBox x:Name="inputDescription" FontSize="15" Padding="15" 
                                     Foreground="{StaticResource showColor}" TextWrapping="Wrap"
                                     KeyDown="TextBoxInput_KeyDown"
                                     Text="{Binding Cake.Description, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"
                                 >
                                <TextBox.Style>
                                    <Style TargetType="TextBox" xmlns:sys="clr-namespace:System;assembly=mscorlib">
                                        <Style.Resources>
                                            <VisualBrush x:Key="hintname" AlignmentX="Center" AlignmentY="Center" 
                                                         Stretch="None">
                                                <VisualBrush.Visual>
                                                    <Grid>
                                                        <TextBlock Text="Mô tả" FontSize="15"
                                                                   Foreground="{StaticResource hintTextColor}" />
                                                    </Grid>

                                                </VisualBrush.Visual>
                                            </VisualBrush>
                                        </Style.Resources>
                                        <Style.Triggers>
                                            <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                                                <Setter Property="Background" Value="{StaticResource hintname}" />
                                                <Setter Property="BorderBrush" Value="{StaticResource hintTextColor}"/>
                                            </Trigger>
                                            <Trigger Property="Text" Value="{x:Null}">
                                                <Setter Property="Background" Value="{StaticResource hintname}" />
                                                <Setter Property="BorderBrush" Value="{StaticResource hintTextColor}"/>
                                            </Trigger>
                                            <Trigger Property="IsKeyboardFocused" Value="True">
                                                <Setter Property="Background" Value="{StaticResource transparentColor}" />
                                            </Trigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding RelativeSource={x:Static RelativeSource.Self},Path=IsKeyboardFocused}" Value="False" />
                                                    <Condition Binding="{Binding RelativeSource={x:Static RelativeSource.Self},Path=Text, Converter={StaticResource stringConverter}}" Value="1"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Background" Value="{StaticResource transparentColor}"/>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </Grid>
                    </Grid>
                </Grid>
                <Grid Grid.Column="2">
                    <Border Grid.Row="1" Panel.ZIndex="-1" Opacity="0.9" Margin="0 0 0 0">
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="5"
                                          Opacity=".5"
                                          ShadowDepth="3" />
                        </Border.Effect>
                        <Border 
                            BorderBrush="White"
                            Background="Transparent"
                            BorderThickness="3.5"
                            CornerRadius="15">
                        </Border>
                    </Border>
                    <Grid Grid.Row="1" Margin="20 20 20 0"
                        Panel.ZIndex="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="1.5*"/>
                            <RowDefinition Height="8.5*"/>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0">
                            <TextBlock Text="Danh sách ảnh" FontSize="20" Foreground="{StaticResource showColor}" TextAlignment="Center"
                                       VerticalAlignment="Center"/>
                        </Grid>
                        <Grid Grid.Row="1" Margin="0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="8.5*"/>
                                <RowDefinition Height="1.5*"/>
                            </Grid.RowDefinitions>
                            <ListView x:Name="listImageOfProduct" ScrollViewer.HorizontalScrollBarVisibility="Disabled">                                
                                <ListView.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel 
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                        />      
                                    </ItemsPanelTemplate>
                                </ListView.ItemsPanel>
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Cursor="Hand" Orientation="Horizontal">
                                            <Grid>
                                                <Grid.Resources>
                                                    <Style TargetType="{x:Type Border}" x:Key="styleBorder">
                                                        <Style.Triggers>
                                                            <EventTrigger RoutedEvent="MouseEnter">
                                                                <BeginStoryboard>
                                                                    <Storyboard>
                                                                        <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Height" To="84" />
                                                                        <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Width" To="126" />
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </EventTrigger>
                                                            <EventTrigger RoutedEvent="MouseLeave">
                                                                <BeginStoryboard>
                                                                    <Storyboard>
                                                                        <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Height" To="76" />
                                                                        <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Width" To="114" />
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </EventTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Grid.Resources>                                                
                                                <Border x:Name="imageItemBorder" 
                                                            CornerRadius="20"
                                                            Width="114" Height="76"
                                                            Margin="0, 0, 0, 0"
                                                            Style="{StaticResource styleBorder}">
                                                    <Border.Background>
                                                        <ImageBrush 
                                                            Stretch="Fill"
                                                            ImageSource="{Binding ImageName, Converter={StaticResource LinkImgConverter}}"
                                                            RenderOptions.BitmapScalingMode="HighQuality"/>
                                                    </Border.Background>
                                                </Border>
                                                <Button 
                                                    Width="20"
                                                    Height="20"
                                                    Background="Transparent"
                                                    BorderBrush="Transparent"
                                                    VerticalAlignment="Top"
                                                    HorizontalAlignment="Right" Click="DeleteImageOfProduct_Click"
                                                >
                                                    <Button.Content>
                                                        <Image 
                                                                RenderOptions.BitmapScalingMode="HighQuality"
                                                                Width="15" Height="15" 
                                                                Source="/Images/remove.png"

                                                            />
                                                    </Button.Content>
                                                </Button>

                                            </Grid>
                                            <Label Content="{Binding ImageName}" Visibility="Collapsed"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>

                            <Button x:Name="addNewImg" Click="addNewImg_Click"  Panel.ZIndex="1" Grid.Row="1" 
                                    HorizontalAlignment="Right" Margin="30 5" Padding="0"
                                                    Style="{StaticResource suggestWordButton}">
                                <Button.Content>
                                    <Image Source="/Images/control-icon/photo.png" Height="30" Width="30" 
                                           RenderOptions.BitmapScalingMode="HighQuality"/>
                                </Button.Content>
                            </Button>
                        </Grid>
                    </Grid>
                </Grid>
            </Grid>
        </Grid>
        <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right" Margin="10">
            <Button x:Name="actionBtn" Content="{Binding ActionName, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" 
                    Margin="0 0 10 0" Click="actionBtn_Click" Padding="5" MaxHeight="40" MinWidth="60" 
                    Style="{DynamicResource sgraykbtnstyle}"/>
            <Button x:Name="deleteBtn" Content="Xóa" Margin="0 0 10 0" Click="deleteBtn_Click" Padding="5" 
                    MaxHeight="40" MinWidth="60" Style="{DynamicResource sgraykbtnstyle}"/>
            <Button x:Name="cancelBtn" Content="Thoát" Margin="0 0 50 0" Click="cancelBtn_Click" Padding="5" 
                    MaxHeight="40" MinWidth="60" Style="{DynamicResource sgraykbtnstyle}"/>
        </StackPanel>
    </Grid>
</Window>
